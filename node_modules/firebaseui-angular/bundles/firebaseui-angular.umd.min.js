!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("@angular/core"),require("@angular/fire/auth"),require("firebaseui"),require("firebase/auth"),require("firebase/app"),require("@angular/common")):"function"==typeof define&&define.amd?define("firebaseui-angular",["exports","@angular/core","@angular/fire/auth","firebaseui","firebase/auth","firebase/app","@angular/common"],i):i((e=e||self)["firebaseui-angular"]={},e.ng.core,e.ng.fire.auth,e.firebaseui$1,null,e.firebaseOriginal,e.ng.common)}(this,function(e,i,t,r,n,a,s){"use strict";var u=function(){function e(e){window.firebaseUiInstance||(window.firebaseUiInstance=new r.auth.AuthUI(e.auth)),this.firebaseUiInstance=window.firebaseUiInstance}return e.decorators=[{type:i.Injectable}],e.ctorParameters=function(){return[{type:t.AngularFireAuth}]},e}(),o=this&&this.__assign||function(){return(o=Object.assign||function(e){for(var i,t=1,r=arguments.length;t<r;t++)for(var n in i=arguments[t])Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);return e}).apply(this,arguments)},f=function(){function e(e,t,r,n,a){this.angularFireAuth=e,this._firebaseUiConfig=t,this._firebaseUiConfig_Feature=r,this.ngZone=n,this.firebaseUIService=a,this.signInSuccessWithAuthResultCallback=new i.EventEmitter,this.signInFailureCallback=new i.EventEmitter}return Object.defineProperty(e.prototype,"firebaseUiConfig",{get:function(){return o({},this._firebaseUiConfig,this._firebaseUiConfig_Feature)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.subscription=this.angularFireAuth.authState.subscribe(function(i){if(i&&i.isAnonymous||!i){if(0===e.firebaseUiConfig.signInOptions.length)throw new Error("There must be at least one AuthProvider.");e.firebaseUIPopup()}})},e.prototype.ngOnDestroy=function(){this.subscription&&this.subscription.unsubscribe()},e.prototype.getUIAuthConfig=function(){return this.firebaseUiConfig.callbacks||(this._firebaseUiConfig[e.COMPUTED_CALLBACKS]=!0,this._firebaseUiConfig.callbacks=this.getCallbacks()),this.firebaseUiConfig},e.prototype.firebaseUIPopup=function(){var i=this.firebaseUIService.firebaseUiInstance,t=this.getUIAuthConfig(),r=!1;t[e.COMPUTED_CALLBACKS]&&(r=!0,delete t[e.COMPUTED_CALLBACKS]),i.start("#firebaseui-auth-container",t),r&&(this._firebaseUiConfig.callbacks=null)},e.prototype.getCallbacks=function(){var e=this;return{signInSuccessWithAuthResult:function(i,t){return e.ngZone.run(function(){e.signInSuccessWithAuthResultCallback.emit({authResult:i,redirectUrl:t})}),e.firebaseUiConfig.signInSuccessUrl},signInFailure:function(i){return e.ngZone.run(function(){e.signInFailureCallback.emit({code:i.code,credential:i.credential})}),Promise.reject()}}},e.COMPUTED_CALLBACKS="COMPUTED_CALLBACKS",e.decorators=[{type:i.Component,args:[{selector:"firebase-ui",template:'<div id="firebaseui-auth-container"></div>'}]}],e.ctorParameters=function(){return[{type:t.AngularFireAuth},{type:undefined,decorators:[{type:i.Inject,args:["firebaseUIAuthConfig"]}]},{type:undefined,decorators:[{type:i.Inject,args:["firebaseUIAuthConfigFeature"]}]},{type:i.NgZone},{type:u}]},e.propDecorators={signInSuccessWithAuthResultCallback:[{type:i.Output,args:["signInSuccessWithAuthResult"]}],signInFailureCallback:[{type:i.Output,args:["signInFailure"]}]},e}(),c=a,l=r,g=function(){return function(){}}(),b=function(){return function(){}}(),h=function(){function e(){}return e.forRoot=function(i){return{ngModule:e,providers:[{provide:"firebaseUIAuthConfig",useValue:i},{provide:"firebaseUIAuthConfigFeature",useValue:{}}]}},e.forFeature=function(i){return{ngModule:e,providers:[{provide:"firebaseUIAuthConfigFeature",useValue:i}]}},e.decorators=[{type:i.NgModule,args:[{imports:[s.CommonModule],declarations:[f],providers:[u],exports:[f]}]}],e}();e.FirebaseUIModule=h,e.FirebaseUISignInFailure=b,e.FirebaseUISignInSuccessWithAuthResult=g,e.FirebaseuiAngularLibraryComponent=f,e.FirebaseuiAngularLibraryService=u,e.firebase=c,e.firebaseui=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=firebaseui-angular.umd.min.js.map